import { useState, useEffect } from "react";
import Head from "next/head";

// Components
import Button from "@/components/Button";
import Clock from "@/components/Clock";
import List from "@/components/List";

// Hooks
import { useTimer } from "@/hooks/useTimer";

// const inter = Inter({ subsets: ["latin"] });
// const lobster = Lobster({ weight: "400", style: ["normal"] });

export default function Home() {
  const mainColor = `bg-sunset-orange`;
  const textColor = `text-sunset-orange`;
  const secondColor = `hover:bg-sunset-orange-800`;
  const shadowColor = `hover:shadow-[0_15px_20px_rgba(249,65,68,0.4)]`;
  const [change, setChange] = useState(false);

  const timer = useTimer({
    change,
    initialTime: 900,
  });

  const handleClick = () => {
    setChange(!change);
  };
  const handleReset = () => {
    setChange(!change);
  };

  return (
    <>
      <Head>
        <title>Pomodoro</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <div className={`flex flex-col w-full h-screen ${mainColor}`}>
        {/* <header
          className={`w-full h-1/6 shadow-md flex items-center font-bold font-gotham p-3`}
        >
          <h1 className="text-white text-4xl">Pomodoro</h1>
        </header> */}
        <main
          className={`flex flex-col w-full h-screen px-3 justify-center items-center`}
        >
          <div
            className={`flex flex-col w-5/6 h-2/5 bg-sunset-orange-300 shadow-lg rounded-md items-center justify-between p-6 max-w-[650px]`}
          >
            <List textColor={textColor} />
            <div
              className={`flex flex-col w-full h-auto justify-center items-center`}
            >
              <Clock textColor={textColor} time={timer} />
            </div>
            <div
              className={`flex flex-row w-full h-auto justify-center items-center gap-6`}
            >
              <Button
                onClick={handleClick}
                change={change}
                mainColor={mainColor}
                shadowColor={shadowColor}
                secondColor={secondColor}
              />
              {change && (
                <a className="cursor-pointer" onClick={handleReset}>
                  <svg
                    xmlns="http://www.w3.org/2000/svg"
                    viewBox="0 0 24 24"
                    className="fill-sunset-orange-800 w-10 h-auto"
                  >
                    <path d="M13.293 6.293 7.586 12l5.707 5.707 1.414-1.414L10.414 12l4.293-4.293z"></path>
                  </svg>
                </a>
              )}
            </div>
          </div>
        </main>
      </div>
    </>
  );
}
